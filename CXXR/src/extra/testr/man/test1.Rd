% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/testr.r
\name{test1}
\alias{test1}
\title{Function that creates a test based on its code and checks.

The function identifies new test, specifies its generators and their values and the checks used to verify its correctness. The test can optionally have a name specified.

The test is expanded to as many tests as there are permutations of its independent generators. The generator values are incremented in order of their definition so that the last defined generator is the LSB value. For example a test with three generators will be expanded accordingly:

test(
  g(a, 1, 2),
  g(b, 3, 4),
  g(c, 5, 6),
  a + b + c
)

a b c
1 3 5
1 3 6
1 4 5
1 4 6
2 3 5
2 3 6
2 4 5
2 4 6

A test may also have generators that depend on others. These do not increase the number of expanded tests but allow a mechanism of linking two or more generated values together.

Any usage of the generator name in either the code, or the output test will be replaced by the respective value of that generator for the particular test.

To expand the tests, makeTests function must be called.}
\usage{
test1(..., name = NULL, o = NULL, w = NULL, e = NULL)
}
\arguments{
\item{...}{generators, code of the test. Code must be the last argument. Code can be eitcher character, or an AST. Other named arguments will become fields of the test object (but this has no effect on the standard test implementation)}

\item{name}{optional name of the test.}

\item{o}{Expected output of the test. Can contain generators. If not specified, and no error is expected, the output will be calculated automatically by executing the test. If the output contains generators, these will be substitued with their values. If the output is character string, it will still be substitued, but not deparsed. Only the last value of the test can be checked. A code can be supplied instead of a value in which case the code will be exectuted to produce the correct output (this will happen in the test expansion, not on target).}

\item{w}{Character of warning messages to be expected. The messages can be either parts of the message or full lines. If there are multiple warning messages all must be found within the test result.}

\item{e}{Character of error messages expected. The messages can be either parts of the message or full lines. If there are multiple error messages all must be found within the test result.}
}
\value{
NULL - the tests are added automatically to the makeTests.
}
\description{
Function that creates a test based on its code and checks.

The function identifies new test, specifies its generators and their values and the checks used to verify its correctness. The test can optionally have a name specified.

The test is expanded to as many tests as there are permutations of its independent generators. The generator values are incremented in order of their definition so that the last defined generator is the LSB value. For example a test with three generators will be expanded accordingly:

test(
  g(a, 1, 2),
  g(b, 3, 4),
  g(c, 5, 6),
  a + b + c
)

a b c
1 3 5
1 3 6
1 4 5
1 4 6
2 3 5
2 3 6
2 4 5
2 4 6

A test may also have generators that depend on others. These do not increase the number of expanded tests but allow a mechanism of linking two or more generated values together.

Any usage of the generator name in either the code, or the output test will be replaced by the respective value of that generator for the particular test.

To expand the tests, makeTests function must be called.
}
\seealso{
makeTests, cg, g, testSubstitute
}

