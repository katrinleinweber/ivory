
Ivory Under development (unstable) (2017-02-11 r936) -- "Internationalized Version of R"
Copyright (C) 2013-2017 Lukasz Daniel (lukasz.daniel@gmail.com)
See README-IVORY file for details.

R Under development (unstable) (2017-02-11 r72157) -- "Unsuffered Consequences"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

Ivory is not part of the R project, so please do not report bugs
via r-bugs or the R website - instead refer to the author.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "tools"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('tools')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CRANtools")
> ### * CRANtools
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CRANtools
> ### Title: CRAN Package Repository Tools
> ### Aliases: CRAN_package_db CRAN_check_results CRAN_check_details
> ###   CRAN_memtest_notes summarize_CRAN_check_status
> 
> ### ** Examples
> 
> ## IGNORE_RDIFF_BEGIN
> ## Don't show: 
> set.seed(11)
> ## End (Don't show)
> pdb <- CRAN_package_db()
> dim(pdb)
[1] 10081    65
> ## DESCRIPTION fields included:
> colnames(pdb)
 [1] "Package"                 "Version"                
 [3] "Priority"                "Depends"                
 [5] "Imports"                 "LinkingTo"              
 [7] "Suggests"                "Enhances"               
 [9] "License"                 "License_is_FOSS"        
[11] "License_restricts_use"   "OS_type"                
[13] "Archs"                   "MD5sum"                 
[15] "NeedsCompilation"        "Additional_repositories"
[17] "Author"                  "Authors@R"              
[19] "Biarch"                  "BugReports"             
[21] "BuildKeepEmpty"          "BuildManual"            
[23] "BuildResaveData"         "BuildVignettes"         
[25] "Built"                   "ByteCompile"            
[27] "Classification/ACM"      "Classification/ACM-2012"
[29] "Classification/JEL"      "Classification/MSC"     
[31] "Classification/MSC-2010" "Collate"                
[33] "Collate.unix"            "Collate.windows"        
[35] "Contact"                 "Copyright"              
[37] "Date"                    "Description"            
[39] "Encoding"                "KeepSource"             
[41] "Language"                "LazyData"               
[43] "LazyDataCompression"     "LazyLoad"               
[45] "MailingList"             "Maintainer"             
[47] "Note"                    "Packaged"               
[49] "RdMacros"                "SysDataCompression"     
[51] "SystemRequirements"      "Title"                  
[53] "Type"                    "URL"                    
[55] "VignetteBuilder"         "ZipData"                
[57] "Published"               "Path"                   
[59] "X-CRAN-Comment"          "Reverse depends"        
[61] "Reverse imports"         "Reverse linking to"     
[63] "Reverse suggests"        "Reverse enhances"       
[65] "MD5sum"                 
> ## Summarize publication dates:
> summary(as.Date(pdb$Published))
        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. 
"2005-10-29" "2014-10-25" "2016-02-19" "2015-08-12" "2016-10-11" "2017-02-13" 
> ## Summarize numbers of packages according to maintainer:
> summary(lengths(split(pdb$Package, pdb$Maintainer)))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.000   1.000   1.000   1.643   2.000  63.000 
> ## Packages with 'LASSO' in their Description:
> pdb$Package[grepl("LASSO", pdb$Description)]
 [1] "apple"           "CovSelHigh"      "crrp"            "ExactPath"      
 [5] "expandFunctions" "extlasso"        "FeaLect"         "FindIt"         
 [9] "glmvsd"          "graphicalVAR"    "ISBF"            "milr"           
[13] "mpath"           "MVB"             "nets"            "pass"           
[17] "pgee.mixed"      "polywog"         "ppmlasso"        "rqPen"          
[21] "SparseLearner"   "stR"            
> 
> results <- CRAN_check_results()
> ## Available variables:
> names(results)
 [1] "Flavor"     "Package"    "Version"    "Priority"   "Maintainer"
 [6] "Status"     "Flags"      "T_install"  "T_check"    "T_total"   
> ## Tabulate overall check status according to flavor:
> with(results, table(Flavor, Status))
                                   Status
Flavor                              ERROR FAIL NOTE   OK WARN
  r-devel-linux-x86_64-debian-clang   102    0 3341 6493  119
  r-devel-linux-x86_64-debian-gcc      64    0 3338 6552  112
  r-devel-linux-x86_64-fedora-clang    72    0 3874 5990  124
  r-devel-linux-x86_64-fedora-gcc      60    0 3930 5958  114
  r-devel-macos-x86_64-clang           75    0 3702 6123  125
  r-devel-windows-ix86+x86_64          94    4 3458 6291  177
  r-patched-linux-x86_64               41    0 3366 6614   34
  r-patched-solaris-sparc             219    0 3718 5871  116
  r-patched-solaris-x86               184    0 3723 5940  111
  r-release-linux-x86_64               38    0 3365 6633   32
  r-release-osx-x86_64-mavericks      198    9 3761 5737  367
  r-release-windows-ix86+x86_64        79    4 3475 6435   47
  r-oldrel-windows-ix86+x86_64        199    6 2213 7397   49
> 
> details <- CRAN_check_details()
> ## Available variables:
> names(details)
[1] "Package" "Version" "Flavor"  "Check"   "Status"  "Output"  "Flags"  
> ## Tabulate checks according to their status:
> tab <- with(details, table(Check, Status))
> ## Inspect some installation problems:
> bad <- subset(details,
+               ((Check == "whether package can be installed") &
+                (Status != "OK")))
> head(bad[sample(seq_len(NROW(bad)), NROW(bad)), ])
Package: pvrank 1.1.1
Flavor: r-devel-macos-x86_64-clang
Flags: --no-stop-on-test-error
Check: whether package can be installed, Result: WARNING
  Found the following significant warnings:
    Warning: GNU Extension: Symbol ‘n’ is used before it is typed at (1)
  See ‘/Users/ripley/R/packages/tests-devel/pvrank.Rcheck/00install.out’ for details.

Package: AMModels 0.1.1
Flavor: r-devel-linux-x86_64-debian-clang
Check: whether package can be installed, Result: WARNING
  Found the following significant warnings:
    Warning: namespace ‘unmarked’ is not available and has been replaced
  See ‘/home/hornik/tmp/R.check/r-devel-clang/Work/PKGS/AMModels.Rcheck/00install.out’ for details.

Package: LatentREGpp 0.2.2
Flavor: r-patched-solaris-x86
Check: whether package can be installed, Result: ERROR
  Installation failed.
  See ‘/home/ripley/R/packages/tests32/LatentREGpp.Rcheck/00install.out’ for details.

Package: EMMIXskew 1.0.1
Flavor: r-devel-linux-x86_64-debian-clang
Check: whether package can be installed, Result: WARNING
  Found the following significant warnings:
    Warning: Integer division truncated to constant ‘1’ at (1) [-Winteger-division]
  See ‘/home/hornik/tmp/R.check/r-devel-clang/Work/PKGS/EMMIXskew.Rcheck/00install.out’ for details.

Package: stpp 1.0-5
Flavor: r-devel-linux-x86_64-debian-clang
Check: whether package can be installed, Result: WARNING
  Found the following significant warnings:
    Warning: GNU Extension: Nonstandard type declaration REAL*8 at (1)
    Warning: ‘pi’ is used uninitialized in this function [-Wuninitialized]
  See ‘/home/hornik/tmp/R.check/r-devel-clang/Work/PKGS/stpp.Rcheck/00install.out’ for details.

Package: odbc 1.0.1
Flavor: r-oldrel-windows-ix86+x86_64
Check: whether package can be installed, Result: ERROR
  Installation failed.
  See 'd:/Rcompile/CRANpkg/local/3.2/odbc.Rcheck/00install.out' for details.
> 
> mtnotes <- CRAN_memtest_notes()
> head(mtnotes)
$alineR
     Test       Path            
[1,] "valgrind" "alineR-Ex.Rout"

$`ASAN-history`
     Test   Path          
[1,] "Keep" "ASAN-history"

$ashr
     Test       Path          
[1,] "valgrind" "ashr"        
[2,] "valgrind" "ashr-Ex.Rout"

$audio
     Test       Path           
[1,] "valgrind" "audio-Ex.Rout"

$BAMBI
     Test       Path           
[1,] "valgrind" "BAMBI-Ex.Rout"

$BASIX
     Test          Path           
[1,] "clang-UBSAN" "BASIX-Ex.Rout"

> ## Show counts of issues according to test:
> table(do.call(rbind, mtnotes)[, "Test"])

 clang-ASAN clang-UBSAN   gcc6-ASAN  gcc6-UBSAN   gcc7-ASAN  gcc7-UBSAN 
         41         123          25          78          26          78 
       Keep    valgrind 
          4         124 
> 
> ## Summarize CRAN check status for 10 random packages
> ## (reusing the information already read in):
> pos <- sample(seq_len(NROW(pdb)), 10L)
> summarize_CRAN_check_status(pdb[pos, "Package"],
+                             results, details, mtnotes)
Package: censReg
****************

Current CRAN status: OK: 13
See: <https://CRAN.R-project.org/web/checks/check_results_censReg.html>

Package: fivethirtyeight
************************

Current CRAN status: NOTE: 7, OK: 6
See: <https://CRAN.R-project.org/web/checks/check_results_fivethirtyeight.html>

Version: 0.1.0
Flags: --no-stop-on-test-error
Check: data for non-ASCII characters, Result: NOTE
    Note: found 346 marked UTF-8 strings
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/fivethirtyeight-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-gcc/fivethirtyeight-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-macos-x86_64-clang/fivethirtyeight-00check.html>

Version: 0.1.0
Check: data for non-ASCII characters, Result: NOTE
    Note: found 346 marked UTF-8 strings
See: <https://www.r-project.org/nosvn/R.check/r-patched-solaris-sparc/fivethirtyeight-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-solaris-x86/fivethirtyeight-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-osx-x86_64-mavericks/fivethirtyeight-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-oldrel-windows-ix86+x86_64/fivethirtyeight-00check.html>

Package: mvtnorm
****************

Current CRAN status: OK: 13
See: <https://CRAN.R-project.org/web/checks/check_results_mvtnorm.html>

Package: bindrcpp
*****************

Current CRAN status: OK: 13
See: <https://CRAN.R-project.org/web/checks/check_results_bindrcpp.html>

Package: CNprep
***************

Current CRAN status: NOTE: 12, OK: 1
See: <https://CRAN.R-project.org/web/checks/check_results_CNprep.html>

Version: 2.0
Check: R code for possible problems, Result: NOTE
  CNclusterNcenter: no visible global function definition for ‘median’
  CNclusterNcenter: no visible binding for global variable ‘var’
  breakIntoGaps: no visible global function definition for ‘runif’
  centerprob: no visible global function definition for ‘pnorm’
  getz: no visible global function definition for ‘predict’
  smad: no visible global function definition for ‘mad’
  smedian: no visible global function definition for ‘median’
  smedian.sample: no visible global function definition for ‘median’
  smedmad: no visible global function definition for ‘median’
  smedmad: no visible global function definition for ‘mad’
  Undefined global functions or variables:
    mad median pnorm predict runif var
  Consider adding
    importFrom("stats", "mad", "median", "pnorm", "predict", "runif",
               "var")
  to your NAMESPACE file.
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-gcc/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-linux-x86_64/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-solaris-sparc/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-solaris-x86/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-linux-x86_64/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-osx-x86_64-mavericks/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-windows-ix86+x86_64/CNprep-00check.html>

Version: 2.0
Flags: --no-stop-on-test-error
Check: R code for possible problems, Result: NOTE
  CNclusterNcenter: no visible global function definition for ‘median’
  CNclusterNcenter: no visible binding for global variable ‘var’
  breakIntoGaps: no visible global function definition for ‘runif’
  centerprob: no visible global function definition for ‘pnorm’
  getz: no visible global function definition for ‘predict’
  smad: no visible global function definition for ‘mad’
  smedian: no visible global function definition for ‘median’
  smedian.sample: no visible global function definition for ‘median’
  smedmad: no visible global function definition for ‘median’
  smedmad: no visible global function definition for ‘mad’
  Undefined global functions or variables:
    mad median pnorm predict runif var
  Consider adding
    importFrom("stats", "mad", "median", "pnorm", "predict", "runif",
               "var")
  to your NAMESPACE file.
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-gcc/CNprep-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-macos-x86_64-clang/CNprep-00check.html>

Package: cgwtools
*****************

Current CRAN status: NOTE: 12, OK: 1
See: <https://CRAN.R-project.org/web/checks/check_results_cgwtools.html>

Version: 3.0
Check: R code for possible problems, Result: NOTE
  !: no visible global function definition for ‘dev.new’
  lssize : s4gonebyte : fb4: no visible global function definition for
    ‘setNames’
  lssize : s4gonebyte : fb4: no visible global function definition for
    ‘slotNames’
  lssize : s4gonebyte : fb4: no visible binding for global variable
    ‘slot’
  lssize : s4gonebyte : fb4: no visible global function definition for
    ‘object.size’
  lssize : s4gone : fs4: no visible global function definition for
    ‘setNames’
  lssize : s4gone : fs4: no visible global function definition for
    ‘slotNames’
  lssize : s4gone : fs4: no visible binding for global variable ‘slot’
  mystat: no visible global function definition for ‘median’
  mystat: no visible global function definition for ‘sd’
  seqle: no visible global function definition for ‘head’
  thekurt: no visible global function definition for ‘var’
  theskew: no visible global function definition for ‘sd’
  Undefined global functions or variables:
    dev.new head median object.size sd setNames slot slotNames var
  Consider adding
    importFrom("grDevices", "dev.new")
    importFrom("methods", "slot", "slotNames")
    importFrom("stats", "median", "sd", "setNames", "var")
    importFrom("utils", "head", "object.size")
  to your NAMESPACE file (and ensure that your DESCRIPTION Imports field
  contains 'methods').
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-gcc/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-linux-x86_64/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-solaris-sparc/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-solaris-x86/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-linux-x86_64/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-osx-x86_64-mavericks/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-windows-ix86+x86_64/cgwtools-00check.html>

Version: 3.0
Flags: --no-stop-on-test-error
Check: R code for possible problems, Result: NOTE
  !: no visible global function definition for ‘dev.new’
  lssize : s4gonebyte : fb4: no visible global function definition for
    ‘setNames’
  lssize : s4gonebyte : fb4: no visible global function definition for
    ‘slotNames’
  lssize : s4gonebyte : fb4: no visible binding for global variable
    ‘slot’
  lssize : s4gonebyte : fb4: no visible global function definition for
    ‘object.size’
  lssize : s4gone : fs4: no visible global function definition for
    ‘setNames’
  lssize : s4gone : fs4: no visible global function definition for
    ‘slotNames’
  lssize : s4gone : fs4: no visible binding for global variable ‘slot’
  mystat: no visible global function definition for ‘median’
  mystat: no visible global function definition for ‘sd’
  seqle: no visible global function definition for ‘head’
  thekurt: no visible global function definition for ‘var’
  theskew: no visible global function definition for ‘sd’
  Undefined global functions or variables:
    dev.new head median object.size sd setNames slot slotNames var
  Consider adding
    importFrom("grDevices", "dev.new")
    importFrom("methods", "slot", "slotNames")
    importFrom("stats", "median", "sd", "setNames", "var")
    importFrom("utils", "head", "object.size")
  to your NAMESPACE file (and ensure that your DESCRIPTION Imports field
  contains 'methods').
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-gcc/cgwtools-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-macos-x86_64-clang/cgwtools-00check.html>

Package: gravity
****************

Current CRAN status: OK: 12
See: <https://CRAN.R-project.org/web/checks/check_results_gravity.html>

Package: iRegression
********************

Current CRAN status: OK: 13
See: <https://CRAN.R-project.org/web/checks/check_results_iRegression.html>

Package: DiversitySampler
*************************

Current CRAN status: NOTE: 13
See: <https://CRAN.R-project.org/web/checks/check_results_DiversitySampler.html>

Version: 2.1
Check: DESCRIPTION meta-information, Result: NOTE
  Malformed Title field: should not end in a period.
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-gcc/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-windows-ix86+x86_64/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-linux-x86_64/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-solaris-sparc/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-solaris-x86/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-linux-x86_64/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-osx-x86_64-mavericks/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-windows-ix86+x86_64/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-oldrel-windows-ix86+x86_64/DiversitySampler-00check.html>

Version: 2.1
Check: Rd line widths, Result: NOTE
  Rd file 'H.sampler.Rd':
    \usage lines wider than 90 characters:
       H.sampler(x = "community matrix (spp=col,obs=row)", n = "sample size vector", nit = "number of iterations to use", base = exp(1), corr  ... [TRUNCATED]
  
  These lines will be truncated in the PDF manual.
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-clang/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-debian-gcc/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-patched-linux-x86_64/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-release-linux-x86_64/DiversitySampler-00check.html>

Version: 2.1
Flags: --no-stop-on-test-error
Check: DESCRIPTION meta-information, Result: NOTE
  Malformed Title field: should not end in a period.
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-gcc/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-macos-x86_64-clang/DiversitySampler-00check.html>

Version: 2.1
Flags: --no-stop-on-test-error
Check: Rd line widths, Result: NOTE
  Rd file 'H.sampler.Rd':
    \usage lines wider than 90 characters:
       H.sampler(x = "community matrix (spp=col,obs=row)", n = "sample size vector", nit = "number of iterations to use", base = exp(1), corr  ... [TRUNCATED]
  
  These lines will be truncated in the PDF manual.
See: <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-clang/DiversitySampler-00check.html>,
     <https://www.r-project.org/nosvn/R.check/r-devel-linux-x86_64-fedora-gcc/DiversitySampler-00check.html>

Package: EcoGenetics
********************

Current CRAN status: OK: 13
See: <https://CRAN.R-project.org/web/checks/check_results_EcoGenetics.html>
> ## IGNORE_RDIFF_END
> 
> 
> 
> cleanEx()
> nameEx("HTMLheader")
> ### * HTMLheader
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: HTMLheader
> ### Title: Generate a standard HTML header for R help
> ### Aliases: HTMLheader
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> cat(HTMLheader("This is a sample header"), sep="\n")
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><title>R: This is a sample header</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="/doc/html/R.css" />
</head><body>
<h1> This is a sample header
<img class="toplogo" src="/doc/html/Rlogo.svg" alt="[R logo]" />
</h1>
<hr/>
<div style="text-align: center;">
<a href="/doc/html/index.html"><img class="arrow" src="/doc/html/up.jpg" alt="[Top]" /></a>
</div>
> 
> 
> 
> cleanEx()
> nameEx("Rd2HTML")
> ### * Rd2HTML
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rd2HTML
> ### Title: Rd Converters
> ### Aliases: Rd2txt Rd2HTML Rd2ex Rd2latex
> ### Keywords: documentation
> 
> ### ** Examples
> cleanEx()
> nameEx("Rd2txt_options")
> ### * Rd2txt_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rd2txt_options
> ### Title: Set formatting options for text help
> ### Aliases: Rd2txt_options
> ### Keywords: documentation
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("Rdutils")
> ### * Rdutils
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Rdutils
> ### Title: Rd Utilities
> ### Aliases: Rd_db
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("assertCondition")
> ### * assertCondition
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: assertCondition
> ### Title: Asserting Error Conditions
> ### Aliases: assertCondition assertWarning assertError
> ### Keywords: programming error
> 
> ### ** Examples
> 
>   assertError(sqrt("abc"))
>   assertWarning(matrix(1:8, 4,3))
> 
>   assertCondition( ""-1 ) # ok, any condition would satisfy this
> 
> try( assertCondition(sqrt(2), "warning") )
Error in command 'assertCondition(sqrt(2), "warning")': 
  Failed to get warning in evaluating sqrt(2)
> ## .. Failed to get warning in evaluating sqrt(2)
>      assertCondition(sqrt("abc"), "error")   # ok
> try( assertCondition(sqrt("abc"), "warning") )# -> error: had no warning
Error in command 'assertCondition(sqrt("abc"), "warning")': 
  Got simpleError in evaluating sqrt("abc"); wanted warning
>      assertCondition(sqrt("abc"), "error")
>   ## identical to assertError() call above
> 
> assertCondition(matrix(1:5, 2,3), "warning")
> try( assertCondition(matrix(1:8, 4,3), "error") )
Error in command 'assertCondition(matrix(1:8, 4, 3), "error")': 
  Got simpleWarning in evaluating matrix(1:8, 4, 3); wanted error
> ## .. Failed to get expected error ....
> 
> ## either warning or worse:
> assertCondition(matrix(1:8, 4,3), "error","warning") # OK
> assertCondition(matrix(1:8, 4, 3), "warning") # OK
> 
> ## when both are signalled:
> ff <- function() { warning("my warning"); stop("my error") }
>     assertCondition(ff(), "warning")
> ## but assertWarning does not allow an error to follow
> try(assertWarning(ff()))
Error in command 'assertWarning(ff())': 
  Got warning in evaluating ff(), but also an error
>     assertCondition(ff(), "error")          # ok
> assertCondition(ff(), "error", "warning") # ok (quietly, catching warning)
> 
> ## assert that assertC..() does not assert [and use *one* argument only]
> assertCondition( assertCondition(sqrt( 2   ), "warning") )
> assertCondition( assertCondition(sqrt("abc"), "warning"), "error")
> assertCondition( assertCondition(matrix(1:8, 4,3), "error"),
+                 "error")
> 
> 
> 
> cleanEx()
> nameEx("bibstyle")
> ### * bibstyle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bibstyle
> ### Title: Select or define a bibliography style.
> ### Aliases: bibstyle getBibstyle
> ### Keywords: utilties documentation
> 
> ### ** Examples
> 
> ## Don't show: 
> options(useFancyQuotes = FALSE)
> ## End (Don't show)
> refs <-
+ c(bibentry(bibtype = "manual",
+     title = "R: A Language and Environment for Statistical Computing",
+     author = person("R Core Team"),
+     organization = "R Foundation for Statistical Computing",
+     address = "Vienna, Austria",
+     year = 2013,
+     url = "https://www.R-project.org"),
+   bibentry(bibtype = "article",
+     author = c(person(c("George", "E.", "P."), "Box"),
+                person(c("David",  "R."),      "Cox")),
+     year = 1964,
+     title = "An Analysis of Transformations",
+     journal = "Journal of the Royal Statistical Society, Series B",
+     volume = 26,
+     pages = "211-252"))
> 
> bibstyle("unsorted", sortKeys = function(refs) seq_along(refs),
+     fmtPrefix = function(paper) paste0("[", paper$.index, "]"),
+        .init = TRUE)
<environment: 0x6d9b710>
> print(refs, .bibstyle = "unsorted")
[1] R Core Team (2013). _R: A Language and Environment for Statistical
Computing_. R Foundation for Statistical Computing, Vienna, Austria.
<URL: https://www.R-project.org>.

[2] Box GEP and Cox DR (1964). "An Analysis of Transformations."
_Journal of the Royal Statistical Society, Series B_, *26*, pp.
211-252.
> 
> 
> 
> cleanEx()
> nameEx("buildVignettes")
> ### * buildVignettes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: buildVignettes
> ### Title: List and Build Package Vignettes
> ### Aliases: buildVignettes pkgVignettes
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> gVigns <- pkgVignettes("grid")
> 
> 
> 
> cleanEx()
> nameEx("charsets")
> ### * charsets
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: charsets
> ### Title: Conversion Tables between Character Sets
> ### Aliases: Adobe_glyphs charset_to_Unicode
> ### Keywords: datasets
> 
> ### ** Examples
> 
> ## find Adobe names for ISOLatin2 chars.
> latin2 <- charset_to_Unicode[, "ISOLatin2"]
> aUnicode <- as.numeric(paste0("0x", Adobe_glyphs$unicode))
> keep <- aUnicode %in% latin2
> aUnicode <- aUnicode[keep]
> aAdobe <- Adobe_glyphs[keep, 1]
> ## first match
> aLatin2 <- aAdobe[match(latin2, aUnicode)]
> ## all matches
> bLatin2 <- lapply(1:256, function(x) aAdobe[aUnicode == latin2[x]])
> format(bLatin2, justify = "none")
  [1] ""                          "controlSTX"               
  [3] "controlSOT"                "controlETX"               
  [5] "controlEOT"                "controlENQ"               
  [7] "controlACK"                "controlBEL"               
  [9] "controlBS"                 "controlHT"                
 [11] "controlLF"                 "controlVT"                
 [13] "controlFF"                 "controlCR"                
 [15] "controlSO"                 "controlSI"                
 [17] "controlDLE"                "controlDC1"               
 [19] "controlDC2"                "controlDC3"               
 [21] "controlDC4"                "controlNAK"               
 [23] "controlSYN"                "controlETB"               
 [25] "controlCAN"                "controlEM"                
 [27] "controlSUB"                "controlESC"               
 [29] "controlFS"                 "controlGS"                
 [31] "controlRS"                 "controlUS"                
 [33] "space, spacehackarabic"    "exclam"                   
 [35] "quotedbl"                  "numbersign"               
 [37] "dollar"                    "percent"                  
 [39] "ampersand"                 "quotesingle"              
 [41] "parenleft"                 "parenright"               
 [43] "asterisk"                  "plus"                     
 [45] "comma"                     "hyphen"                   
 [47] "period"                    "slash"                    
 [49] "zero"                      "one"                      
 [51] "two"                       "three"                    
 [53] "four"                      "five"                     
 [55] "six"                       "seven"                    
 [57] "eight"                     "nine"                     
 [59] "colon"                     "semicolon"                
 [61] "less"                      "equal"                    
 [63] "greater"                   "question"                 
 [65] "at"                        "A"                        
 [67] "B"                         "C"                        
 [69] "D"                         "E"                        
 [71] "F"                         "G"                        
 [73] "H"                         "I"                        
 [75] "J"                         "K"                        
 [77] "L"                         "M"                        
 [79] "N"                         "O"                        
 [81] "P"                         "Q"                        
 [83] "R"                         "S"                        
 [85] "T"                         "U"                        
 [87] "V"                         "W"                        
 [89] "X"                         "Y"                        
 [91] "Z"                         "bracketleft"              
 [93] "backslash"                 "bracketright"             
 [95] "asciicircum"               "underscore"               
 [97] "grave"                     "a"                        
 [99] "b"                         "c"                        
[101] "d"                         "e"                        
[103] "f"                         "g"                        
[105] "h"                         "i"                        
[107] "j"                         "k"                        
[109] "l"                         "m"                        
[111] "n"                         "o"                        
[113] "p"                         "q"                        
[115] "r"                         "s"                        
[117] "t"                         "u"                        
[119] "v"                         "w"                        
[121] "x"                         "y"                        
[123] "z"                         "braceleft"                
[125] "bar, verticalbar"          "braceright"               
[127] "asciitilde"                "controlDEL"               
[129] ""                          ""                         
[131] ""                          ""                         
[133] ""                          ""                         
[135] ""                          ""                         
[137] ""                          ""                         
[139] ""                          ""                         
[141] ""                          ""                         
[143] ""                          ""                         
[145] ""                          ""                         
[147] ""                          ""                         
[149] ""                          ""                         
[151] ""                          ""                         
[153] ""                          ""                         
[155] ""                          ""                         
[157] ""                          ""                         
[159] ""                          ""                         
[161] "nbspace, nonbreakingspace" "Aogonek"                  
[163] "breve"                     "Lslash"                   
[165] "currency"                  "Lcaron"                   
[167] "Sacute"                    "section"                  
[169] "dieresis"                  "Scaron"                   
[171] "Scedilla"                  "Tcaron"                   
[173] "Zacute"                    "sfthyphen, softhyphen"    
[175] "Zcaron"                    "Zdot, Zdotaccent"         
[177] "degree"                    "aogonek"                  
[179] "ogonek"                    "lslash"                   
[181] "acute"                     "lcaron"                   
[183] "sacute"                    "caron"                    
[185] "cedilla"                   "scaron"                   
[187] "scedilla"                  "tcaron"                   
[189] "zacute"                    "hungarumlaut"             
[191] "zcaron"                    "zdot, zdotaccent"         
[193] "Racute"                    "Aacute"                   
[195] "Acircumflex"               "Abreve"                   
[197] "Adieresis"                 "Lacute"                   
[199] "Cacute"                    "Ccedilla"                 
[201] "Ccaron"                    "Eacute"                   
[203] "Eogonek"                   "Edieresis"                
[205] "Ecaron"                    "Iacute"                   
[207] "Icircumflex"               "Dcaron"                   
[209] "Dcroat, Dslash"            "Nacute"                   
[211] "Ncaron"                    "Oacute"                   
[213] "Ocircumflex"               "Odblacute, Ohungarumlaut" 
[215] "Odieresis"                 "multiply"                 
[217] "Rcaron"                    "Uring"                    
[219] "Uacute"                    "Udblacute, Uhungarumlaut" 
[221] "Udieresis"                 "Yacute"                   
[223] "Tcedilla, Tcommaaccent"    "germandbls"               
[225] "racute"                    "aacute"                   
[227] "acircumflex"               "abreve"                   
[229] "adieresis"                 "lacute"                   
[231] "cacute"                    "ccedilla"                 
[233] "ccaron"                    "eacute"                   
[235] "eogonek"                   "edieresis"                
[237] "ecaron"                    "iacute"                   
[239] "icircumflex"               "dcaron"                   
[241] "dcroat, dmacron"           "nacute"                   
[243] "ncaron"                    "oacute"                   
[245] "ocircumflex"               "odblacute, ohungarumlaut" 
[247] "odieresis"                 "divide"                   
[249] "rcaron"                    "uring"                    
[251] "uacute"                    "udblacute, uhungarumlaut" 
[253] "udieresis"                 "yacute"                   
[255] "tcedilla, tcommaaccent"    "dotaccent"                
> 
> 
> 
> cleanEx()
> nameEx("checkFF")
> ### * checkFF
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: checkFF
> ### Title: Check Foreign Function Calls
> ### Aliases: checkFF print.checkFF
> ### Keywords: programming utilities
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("checkPoFiles")
> ### * checkPoFiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: checkPoFiles
> ### Title: Check translation files for inconsistent format strings.
> ### Aliases: checkPoFile checkPoFiles
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Don't run: 
> ##D checkPoFiles("de", "/path/to/R/src/directory")
> ## End (Don't run)
> 
> 
> 
> cleanEx()
> nameEx("checkRdaFiles")
> ### * checkRdaFiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: checkRdaFiles
> ### Title: Report on Details of Saved Images or Re-saves them
> ### Aliases: checkRdaFiles resaveRdaFiles
> ### Keywords: utilities
> 
> ### ** Examples
> ## Don't run: 
> ##D ## from a package top-level source directory
> ##D paths <- sort(Sys.glob(c("data/*.rda", "data/*.RData")))
> ##D (res <- checkRdaFiles(paths))
> ##D ## pick out some that may need attention
> ##D bad <- is.na(res$ASCII) | res$ASCII | (res$size > 1e4 & res$compress == "none")
> ##D res[bad, ]
> ## End (Don't run)
> 
> 
> cleanEx()
> nameEx("check_packages_in_dir")
> ### * check_packages_in_dir
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: check_packages_in_dir
> ### Title: Check Source Packages and Their Reverse Dependencies
> ### Aliases: check_packages_in_dir summarize_check_packages_in_dir_depends
> ###   summarize_check_packages_in_dir_results
> ###   summarize_check_packages_in_dir_timings check_packages_in_dir_changes
> ###   check_packages_in_dir_details
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## Don't run: 
> ##D ## Check packages in dir without reverse dependencies:
> ##D check_packages_in_dir(dir)
> ##D ## Check packages in dir and their reverse dependencies using the
> ##D ## defaults (all repositories in getOption("repos"), all "strong"
> ##D ## reverse dependencies, no recursive reverse dependencies):
> ##D check_packages_in_dir(dir, reverse = list())
> ##D ## Check packages in dir with their reverse dependencies from CRAN,
> ##D ## using all strong reverse dependencies and reverse suggests:
> ##D check_packages_in_dir(dir,
> ##D                       reverse = list(repos = getOption("repos")["CRAN"],
> ##D                                      which = "most"))                   
> ##D ## Check packages in dir with their reverse dependencies from CRAN,
> ##D ## using '--as-cran' for the former but not the latter:
> ##D check_packages_in_dir(dir,
> ##D                       check_args = c("--as-cran", ""),
> ##D                       reverse = list(repos = getOption("repos")["CRAN"]))
> ## End (Don't run)
> 
> 
> 
> cleanEx()
> nameEx("delimMatch")
> ### * delimMatch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: delimMatch
> ### Title: Delimited Pattern Matching
> ### Aliases: delimMatch
> ### Keywords: character
> 
> ### ** Examples
> 
> x <- c("\\value{foo}", "function(bar)")
> delimMatch(x)
[1]  7 -1
attr(,"match.length")
[1]  5 -1
> delimMatch(x, c("(", ")"))
[1] -1  9
attr(,"match.length")
[1] -1  5
> 
> 
> 
> cleanEx()
> nameEx("dependsOnPkgs")
> ### * dependsOnPkgs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dependsOnPkgs
> ### Title: Find Reverse Dependencies
> ### Aliases: dependsOnPkgs
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("encoded")
> ### * encoded
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: encoded_text_to_latex
> ### Title: Translate non-ASCII Text to LaTeX Escapes
> ### Aliases: encoded_text_to_latex
> ### Keywords: utilities
> 
> ### ** Examples
> 
> x <- "fa\xE7ile"
> encoded_text_to_latex(x, "latin1")
[1] "fa{\\c c}ile"
> ## Don't run: 
> ##D ## create a tex file to show the upper half of 8-bit charsets
> ##D x <- rawToChar(as.raw(160:255), multiple = TRUE)
> ##D (x <- matrix(x, ncol = 16, byrow = TRUE))
> ##D xx <- x
> ##D xx[] <- encoded_text_to_latex(x, "latin1") # or latin2 or latin9
> ##D xx <- apply(xx, 1, paste, collapse = "&")
> ##D con <- file("test-encoding.tex", "w")
> ##D header <- c(
> ##D "\\documentclass{article}",
> ##D "\\usepackage[T1]{fontenc}",
> ##D "\\usepackage{Rd}",
> ##D "\\begin{document}",
> ##D "\\HeaderA{test}{}{test}",
> ##D "\\begin{Details}\relax",
> ##D "\\Tabular{cccccccccccccccc}{")
> ##D trailer <- c("}", "\\end{Details}", "\\end{document}")
> ##D writeLines(header, con)
> ##D writeLines(paste0(xx, "\\"), con)
> ##D writeLines(trailer, con)
> ##D close(con)
> ##D ## and some UTF_8 chars
> ##D x <- intToUtf8(as.integer(
> ##D     c(160:383,0x0192,0x02C6,0x02C7,0x02CA,0x02D8,
> ##D       0x02D9, 0x02DD, 0x200C, 0x2018, 0x2019, 0x201C,
> ##D       0x201D, 0x2020, 0x2022, 0x2026, 0x20AC)),
> ##D                multiple = TRUE)
> ##D x <- matrix(x, ncol = 16, byrow = TRUE)
> ##D xx <- x
> ##D xx[] <- encoded_text_to_latex(x, "UTF-8")
> ##D xx <- apply(xx, 1, paste, collapse = "&")
> ##D con <- file("test-utf8.tex", "w")
> ##D writeLines(header, con)
> ##D writeLines(paste(xx, "\\", sep = ""), con)
> ##D writeLines(trailer, con)
> ##D close(con)
> ## End (Don't run)
> 
> 
> cleanEx()
> nameEx("fileutils")
> ### * fileutils
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fileutils
> ### Title: File Utilities
> ### Aliases: file_ext file_path_as_absolute file_path_sans_ext
> ###   list_files_with_exts list_files_with_type
> ### Keywords: file
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("find_gs_cmd")
> ### * find_gs_cmd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: find_gs_cmd
> ### Title: Find a GhostScript Executable
> ### Aliases: find_gs_cmd R_GSCMD GSC
> 
> ### ** Examples
> ## Don't run: 
> ##D ## Suppose a Solaris system has GhostScript 9.00 on the path and
> ##D ## 9.07 in /opt/csw/bin.  Then one might set
> ##D Sys.setenv(R_GSCMD = "/opt/csw/bin/gs")
> ## End (Don't run)
> 
> 
> cleanEx()
> nameEx("getVignetteInfo")
> ### * getVignetteInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getVignetteInfo
> ### Title: Get information on installed vignettes.
> ### Aliases: getVignetteInfo
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("loadRdMacros")
> ### * loadRdMacros
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: loadRdMacros
> ### Title: Load user-defined Rd help system macros.
> ### Aliases: loadRdMacros loadPkgRdMacros
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("makevars")
> ### * makevars
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: makevars
> ### Title: User and Site Compilation Variables
> ### Aliases: makevars_user makevars_site
> ### Keywords: utilities
> 
> ### ** Examples
> ## Don't show: 
> checkMV <- function(r)
+   stopifnot(is.character(r),
+             length(r) == 0 || (length(r) == 1 && file.exists(r)))
> checkMV(makevars_user())
> checkMV(makevars_site())
> ## End (Don't show)
> 
> 
> 
> cleanEx()
> nameEx("md5sum")
> ### * md5sum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: md5sum
> ### Title: Compute MD5 Checksums
> ### Aliases: md5sum
> ### Keywords: utilities
> 
> ### ** Examples
> 
> as.vector(md5sum(dir(R.home(), pattern = "^COPY", full.names = TRUE)))
[1] "12f884d2ae1ff87c09e5b7ccc2c4ca7e"
> 
> 
> 
> cleanEx()
> nameEx("package_dependencies")
> ### * package_dependencies
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: package_dependencies
> ### Title: Computations on the Dependency Hierarchy of Packages
> ### Aliases: package_dependencies
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("package_native_routine_registration_skeleton")
> ### * package_native_routine_registration_skeleton
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: package_native_routine_registration_skeleton
> ### Title: Write Skeleton for Adding Native Routine Registration to a
> ###   Package
> ### Aliases: package_native_routine_registration_skeleton
> 
> ### ** Examples
> ## Don't run: 
> ##D ## with a completed splines/DESCRIPTION file,
> ##D tools::package_native_routine_registration_skeleton('splines',,,FALSE)
> ##D ## produces
> ##D #include <R.h>
> ##D #include <Rinternals.h>
> ##D #include <stdlib.h> // for NULL
> ##D #include <R_ext/Rdynload.h>
> ##D 
> ##D /* FIXME: 
> ##D    Check these declarations against the C/Fortran source code.
> ##D */
> ##D 
> ##D /* .Call calls */
> ##D extern SEXP spline_basis(SEXP, SEXP, SEXP, SEXP);
> ##D extern SEXP spline_value(SEXP, SEXP, SEXP, SEXP, SEXP);
> ##D 
> ##D static const R_CallMethodDef CallEntries[] = {
> ##D     {"spline_basis", (DL_FUNC) &spline_basis, 4},
> ##D     {"spline_value", (DL_FUNC) &spline_value, 5},
> ##D     {NULL, NULL, 0}
> ##D };
> ##D 
> ##D void R_init_splines(DllInfo *dll)
> ##D {
> ##D     R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
> ##D     R_useDynamicSymbols(dll, FALSE);
> ##D }
> ## End (Don't run)
> 
> 
> cleanEx()
> nameEx("parseLatex")
> ### * parseLatex
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parseLatex
> ### Title: These experimental functions work with a subset of LaTeX code.
> ### Aliases: parseLatex deparseLatex latexToUtf8
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("print.via.format")
> ### * print.via.format
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: .print.via.format
> ### Title: Printing Utilities
> ### Aliases: .print.via.format
> ### Keywords: utilities
> 
> ### ** Examples
> 
> ## The function is simply defined as
>  function (x, ...) {
+     writeLines(format(x, ...))
+     invisible(x)
+  }
function (x, ...) 
{
    writeLines(format(x, ...))
    invisible(x)
}
> 
> ## is used for simple print methods in R, and as prototype for new methods.
> 
> 
> 
> cleanEx()
> nameEx("pskill")
> ### * pskill
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pskill
> ### Title: Kill a Process
> ### Aliases: pskill SIGHUP SIGINT SIGQUIT SIGKILL SIGTERM SIGSTOP SIGTSTP
> ###   SIGCONT SIGCHLD SIGUSR1 SIGUSR2
> ### Keywords: utilities
> 
> ### ** Examples
> ## Don't run: 
> ##D pskill(c(237, 245), SIGKILL)
> ## End (Don't run)
> 
> 
> cleanEx()
> nameEx("showNonASCII")
> ### * showNonASCII
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: showNonASCII
> ### Title: Pick Out Non-ASCII Characters
> ### Aliases: showNonASCII showNonASCIIfile
> ### Keywords: utilities
> 
> ### ** Examples
> 
> out <- c(
+ "fa\xE7ile test of showNonASCII():",
+ "\\details{",
+ "   This is a good line",
+ "   This has an \xfcmlaut in it.",
+ "   OK again.",
+ "}")
> f <- tempfile()
> cat(out, file = f, sep = "\n")
> 
> showNonASCIIfile(f)
1: fa<e7>ile test of showNonASCII():
4:    This has an <fc>mlaut in it.
> unlink(f)
> 
> 
> 
> cleanEx()
> nameEx("toHTML")
> ### * toHTML
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: toHTML
> ### Title: Display an object in HTML.
> ### Aliases: toHTML toHTML.packageIQR toHTML.news_db
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> cat(toHTML(demo(package = "base")), sep = "\n")
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><title>R: R</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="/doc/html/R.css" />
</head><body>
<h1> R
<img class="toplogo" src="/doc/html/Rlogo.svg" alt="[R logo]" />
</h1>
<hr/>
<div style="text-align: center;">
<a href="/doc/html/index.html"><img class="arrow" src="/doc/html/up.jpg" alt="[Top]" /></a>
</div>
<h2>Demos in package &lsquo;base&rsquo;</h2>
<table cols="2" width="100%">
<tr>
 <td style="text-align: left; vertical-align: top; width: 10%;">
error.catching
 </td>
 <td style="text-align: left; vertical-align: top; width: 90%;">
More examples on catching and handling errors
 </td>
</tr>

<tr>
 <td style="text-align: left; vertical-align: top; width: 10%;">
is.things
 </td>
 <td style="text-align: left; vertical-align: top; width: 90%;">
Explore some properties of R objects and is.FOO() functions. Not for newbies!
 </td>
</tr>

<tr>
 <td style="text-align: left; vertical-align: top; width: 10%;">
recursion
 </td>
 <td style="text-align: left; vertical-align: top; width: 90%;">
Using recursion for adaptive integration
 </td>
</tr>

<tr>
 <td style="text-align: left; vertical-align: top; width: 10%;">
scoping
 </td>
 <td style="text-align: left; vertical-align: top; width: 90%;">
An illustration of lexical scoping.
 </td>
</tr>

</table>
<p>
</p>
</body></html>
> 
> 
> 
> cleanEx()
> nameEx("undoc")
> ### * undoc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: undoc
> ### Title: Find Undocumented Objects
> ### Aliases: undoc print.undoc
> ### Keywords: documentation
> 
> ### ** Examples
> 
> undoc("tools")                  # Undocumented objects in 'tools'
> 
> 
> 
> cleanEx()
> nameEx("vignetteDepends")
> ### * vignetteDepends
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: vignetteDepends
> ### Title: Retrieve Dependency Information for a Vignette
> ### Aliases: vignetteDepends
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> cleanEx()
> nameEx("vignetteEngine")
> ### * vignetteEngine
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: vignetteEngine
> ### Title: Set or Get a Vignette Processing Engine
> ### Aliases: vignetteEngine
> ### Keywords: utilities documentation
> 
> ### ** Examples
> 
> str(vignetteEngine("Sweave"))
List of 6 components
 $ name   : character "Sweave"
 $ package: character "utils"
 $ pattern: character "[.][rRsS](nw|tex)$"
 $ weave  :function (...)  
 $ tangle :function (...)  
 $ aspell :List of 2 components
  ..$ filter : character "Sweave"
  ..$ control: character "-t"
> 
> 
> 
> cleanEx()
> nameEx("writePACKAGES")
> ### * writePACKAGES
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write_PACKAGES
> ### Title: Generate PACKAGES files
> ### Aliases: write_PACKAGES
> ### Keywords: file utilities
> 
> ### ** Examples
> 
> ## Don't run: 
> ##D write_PACKAGES("c:/myFolder/myRepository")  # on Windows
> ##D write_PACKAGES("/pub/RWin/bin/windows/contrib/2.9",
> ##D                type = "win.binary")  # on Linux
> ## End (Don't run)
> 
> 
> cleanEx()
> nameEx("xgettext")
> ### * xgettext
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: xgettext
> ### Title: Extract Translatable Messages from R Files in a Package
> ### Aliases: xgettext xngettext xgettext2pot
> ### Keywords: utilities
> 
> ### ** Examples
> ## Don't run: 
> ##D ## in a source-directory build of R:
> ##D xgettext(file.path(R.home(), "src", "library", "splines"))
> ## End (Don't run)
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat(gettext("Time elapsed: ", domain = "R-base"), proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  4.136 0.116 13.837 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
